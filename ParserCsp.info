-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.3 from ParserCsp.y
-----------------------------------------------------------------------------

state 9 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_cspparser -> Defs                           (0)
	Defs -> Def                                        (1)
	Defs -> Def Defs                                   (2)
	Def -> PNAME '=' Proc                              (3)
	Proc -> STOP                                       (4)
	Proc -> SKIP                                       (5)
	Proc -> PrefixProc Post                            (6)
	Proc -> RefProc                                    (7)
	Proc -> Proc '||' Proc                             (8)
	Proc -> Proc '[]' Proc                             (9)
	PrefixProc -> Event '->' Proc                      (10)
	Post -> '|' PrefixProc                             (11)
	Post ->                                            (12)
	Event -> EventIn                                   (13)
	Event -> EventOut                                  (14)
	EventIn -> EINAME                                  (15)
	EventOut -> EONAME                                 (16)
	RefProc -> PNAME                                   (17)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	SKIP           { TSkip }
	STOP           { TStop }
	PNAME          { TPName $$ }
	EONAME         { TEOName $$ }
	EINAME         { TEIName $$ }
	'='            { TDef }
	'->'           { TPrefix }
	'|'            { TChoice }
	'||'           { TPar }
	'[]'           { TExtSel }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_cspparser rule  0
	Defs            rules 1, 2
	Def             rule  3
	Proc            rules 4, 5, 6, 7, 8, 9
	PrefixProc      rule  10
	Post            rules 11, 12
	Event           rules 13, 14
	EventIn         rule  15
	EventOut        rule  16
	RefProc         rule  17

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	PNAME          shift, and enter state 3

	Defs           goto state 4
	Def            goto state 5

State 1


	PNAME          shift, and enter state 3

	Def            goto state 2

State 2

	Defs -> Def .                                       (rule 1)



State 3

	Def -> PNAME . '=' Proc                             (rule 3)

	'='            shift, and enter state 7


State 4

	%start_cspparser -> Defs .                          (rule 0)

	%eof           accept


State 5

	Defs -> Def .                                       (rule 1)
	Defs -> Def . Defs                                  (rule 2)

	PNAME          shift, and enter state 3
	%eof           reduce using rule 1

	Defs           goto state 6
	Def            goto state 5

State 6

	Defs -> Def Defs .                                  (rule 2)

	%eof           reduce using rule 2


State 7

	Def -> PNAME '=' . Proc                             (rule 3)

	SKIP           shift, and enter state 14
	STOP           shift, and enter state 15
	PNAME          shift, and enter state 16
	EONAME         shift, and enter state 17
	EINAME         shift, and enter state 18

	Proc           goto state 8
	PrefixProc     goto state 9
	Event          goto state 10
	EventIn        goto state 11
	EventOut       goto state 12
	RefProc        goto state 13

State 8

	Def -> PNAME '=' Proc .                             (rule 3)
	Proc -> Proc . '||' Proc                            (rule 8)
	Proc -> Proc . '[]' Proc                            (rule 9)

	PNAME          reduce using rule 3
	'||'           shift, and enter state 22
	'[]'           shift, and enter state 23
	%eof           reduce using rule 3


State 9

	Proc -> PrefixProc . Post                           (rule 6)

	PNAME          reduce using rule 12
	'|'            shift, and enter state 21
			(reduce using rule 12)

	'||'           reduce using rule 12
	'[]'           reduce using rule 12
	%eof           reduce using rule 12

	Post           goto state 20

State 10

	PrefixProc -> Event . '->' Proc                     (rule 10)

	'->'           shift, and enter state 19


State 11

	Event -> EventIn .                                  (rule 13)

	'->'           reduce using rule 13


State 12

	Event -> EventOut .                                 (rule 14)

	'->'           reduce using rule 14


State 13

	Proc -> RefProc .                                   (rule 7)

	PNAME          reduce using rule 7
	'|'            reduce using rule 7
	'||'           reduce using rule 7
	'[]'           reduce using rule 7
	%eof           reduce using rule 7


State 14

	Proc -> SKIP .                                      (rule 5)

	PNAME          reduce using rule 5
	'|'            reduce using rule 5
	'||'           reduce using rule 5
	'[]'           reduce using rule 5
	%eof           reduce using rule 5


State 15

	Proc -> STOP .                                      (rule 4)

	PNAME          reduce using rule 4
	'|'            reduce using rule 4
	'||'           reduce using rule 4
	'[]'           reduce using rule 4
	%eof           reduce using rule 4


State 16

	RefProc -> PNAME .                                  (rule 17)

	PNAME          reduce using rule 17
	'|'            reduce using rule 17
	'||'           reduce using rule 17
	'[]'           reduce using rule 17
	%eof           reduce using rule 17


State 17

	EventOut -> EONAME .                                (rule 16)

	'->'           reduce using rule 16


State 18

	EventIn -> EINAME .                                 (rule 15)

	'->'           reduce using rule 15


State 19

	PrefixProc -> Event '->' . Proc                     (rule 10)

	SKIP           shift, and enter state 14
	STOP           shift, and enter state 15
	PNAME          shift, and enter state 16
	EONAME         shift, and enter state 17
	EINAME         shift, and enter state 18

	Proc           goto state 27
	PrefixProc     goto state 9
	Event          goto state 10
	EventIn        goto state 11
	EventOut       goto state 12
	RefProc        goto state 13

State 20

	Proc -> PrefixProc Post .                           (rule 6)

	PNAME          reduce using rule 6
	'|'            reduce using rule 6
	'||'           reduce using rule 6
	'[]'           reduce using rule 6
	%eof           reduce using rule 6


State 21

	Post -> '|' . PrefixProc                            (rule 11)

	EONAME         shift, and enter state 17
	EINAME         shift, and enter state 18

	PrefixProc     goto state 26
	Event          goto state 10
	EventIn        goto state 11
	EventOut       goto state 12

State 22

	Proc -> Proc '||' . Proc                            (rule 8)

	SKIP           shift, and enter state 14
	STOP           shift, and enter state 15
	PNAME          shift, and enter state 16
	EONAME         shift, and enter state 17
	EINAME         shift, and enter state 18

	Proc           goto state 25
	PrefixProc     goto state 9
	Event          goto state 10
	EventIn        goto state 11
	EventOut       goto state 12
	RefProc        goto state 13

State 23

	Proc -> Proc '[]' . Proc                            (rule 9)

	SKIP           shift, and enter state 14
	STOP           shift, and enter state 15
	PNAME          shift, and enter state 16
	EONAME         shift, and enter state 17
	EINAME         shift, and enter state 18

	Proc           goto state 24
	PrefixProc     goto state 9
	Event          goto state 10
	EventIn        goto state 11
	EventOut       goto state 12
	RefProc        goto state 13

State 24

	Proc -> Proc . '||' Proc                            (rule 8)
	Proc -> Proc . '[]' Proc                            (rule 9)
	Proc -> Proc '[]' Proc .                            (rule 9)

	PNAME          reduce using rule 9
	'|'            reduce using rule 9
	'||'           reduce using rule 9
	'[]'           reduce using rule 9
	%eof           reduce using rule 9


State 25

	Proc -> Proc . '||' Proc                            (rule 8)
	Proc -> Proc '||' Proc .                            (rule 8)
	Proc -> Proc . '[]' Proc                            (rule 9)

	PNAME          reduce using rule 8
	'|'            reduce using rule 8
	'||'           reduce using rule 8
	'[]'           reduce using rule 8
	%eof           reduce using rule 8


State 26

	Post -> '|' PrefixProc .                            (rule 11)

	PNAME          reduce using rule 11
	'|'            reduce using rule 11
	'||'           reduce using rule 11
	'[]'           reduce using rule 11
	%eof           reduce using rule 11


State 27

	Proc -> Proc . '||' Proc                            (rule 8)
	Proc -> Proc . '[]' Proc                            (rule 9)
	PrefixProc -> Event '->' Proc .                     (rule 10)

	PNAME          reduce using rule 10
	'|'            reduce using rule 10
	'||'           reduce using rule 10
	'[]'           reduce using rule 10
	%eof           reduce using rule 10


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 18
Number of terminals: 10
Number of non-terminals: 10
Number of states: 28
